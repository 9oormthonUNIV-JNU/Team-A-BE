plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java:8.0.32'
    annotationProcessor 'org.projectlombok:lombok'

    //spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'com.h2database:h2'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    //SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // jwt
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    // aws s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //OAuth
    implementation 'org.springframework.security:spring-security-oauth2-client'

}



tasks.named('test') {
    useJUnitPlatform()
}

task copyPrivate(type: Copy) {
    copy {
        from './Team-A-ENV/private' //위 사진과 같은 폴더 명
        include "*.yml" //위 폴더안에 있는 yml파일 명
        into 'src/main/resources' //복사할 위치
    }
}

